#######################################
## JMEScript 0.1.0: ejemplo de script
## <Primos Gemelos>
#######################################

#############################
## Variables externas: m, n
#############################

# comprueba si los dos elementos vecinos de 'n' son primos gemelos
rutina esCompuestoCentral( n, var b_res ) inicio:
	b_res := primo( n-1 ) && primo( n+1 )
fin

# parejas completas de primos gemelos entre a y b
# Nota: excepto para (3,5), el compuesto entre dos primos gemelos es múltiplo de 6
rutina primosGemelos( a, b, var v_res ) inicio:	
	# comprobar parámetros
	errmsg := 'Valor %s debe ser de tipo realdoble y entero; introducido %s:%s'
    si !(esrealdoble(a) && esentero(a)) inicio:
		devolver _throw_(format(errmsg, ['a',tipo(a),a]))
	fin
    si !(esrealdoble(b) && esentero(b)) inicio:
		devolver _throw_(format(errmsg, ['b',tipo(b),b]))
	fin
	
	# iniciar lista e incluir o no pareja especial (3,5)
	v_res := if( a<=3 && b>=5, [[3,5]], [] )
	
	# situar inicio de búsqueda en el múltiplo de 6 más cercano
	a += 6-a%6
	
	# buscar parejas en predecesor/sucesor de los múltiplos de 6
	para n := a hasta b-1 paso 6 inicio:
		llamar a esCompuestoCentral( n, central )
		si central inicio:
			# añadir pareja
			v_res ;= [n-1,n+1]
		fin
	fin
fin

# estimación de la constante de Brun (B2)
# !nota: en la práctica hacen falta demasiadas parejas para estimar la constante (1.902...)
rutina estimacionBrun( parejas, var b2 ) inicio:
	b2 := 0
	para cada pareja en parejas inicio:
		b2 += inv(cabecera(pareja)) + inv(cola(pareja))
	fin
fin


##### INICIO #####
# obtener lista de parejas completas entre m y n (ext vars)
llamar a primosGemelos( indefinido('m',1), indefinido('n',100), lista_parejas )
# primos gemelos en sucesión ordenada
lista := ordenar(conjunto(flatten(lista_parejas)))
# aproximacion de la constante de Brun (B2)
llamar a estimacionBrun( lista_parejas, b2 )

devolver dic('lista parejas',lista_parejas,'parejas',dim(lista_parejas),'lista individual',lista,'primos gemelos',dim(lista),'aproximacion Brun',b2)

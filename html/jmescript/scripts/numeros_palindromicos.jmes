###################################################
## JMEScript 0.1.3, JME 0.6.1: ejemplo de script
## <Números palindrómicos  [A002113,OEIS]>
###################################################

#############################
## Variables externas: a,b
#############################

# test palindromicidad
rutina esPalindromo( n, var test ) inicio:
	si or( !esentero(n), n<0 ) inicio:
		devolver _throw_( format( '%s no es entero un positivo', [n] ) )
	fin
	test := falso
	nTxt := stexto(n)
	L := longitud(nTxt)
	
	para i:=1 hasta L/2 inicio:
		si nTxt;#;i != nTxt;#;(L-i+1) inicio:
			romper rutina
		fin
	fin
	
	test := verdadero
fin

# Nota: la forma descrita en la función comentada siguiente no es el modo más eficiente de comprobar palíndromos, pero es válido
#def esPalindromo(n) := invertir(n) = stexto(n)

###################################################

# inicializar variables externas si no están definidas
a,b :== [indefinido( 'a', 0 ),indefinido( 'b', 1000 )]

# iniciar medición de tiempo de CPU
timestamp := tiempo(verdadero)

# crear lista de palÃ­ndromos
palindromos := []

para i:=a hasta b inicio:
	llamar a esPalindromo( i, test )
	si test inicio:
		palindromos ;= i
	fin
fin

# tiempo de CPU
timespan := tiempo(verdadero) - timestamp

# filtrar diferentes tipos de palíndromos
palindromosPares := filtrar( par(n), n, palindromos )
palindromosImpares := filtrar( impar(n), n, palindromos )
palindromosPrimos := filtrar( primo(n), n, palindromos )
palindromosCuadrados := filtrar( sqr(round(sqrt(n)))=n, n, palindromos )
palindromosCubos := filtrar( cb(round(cbrt(n)))=n, n, palindromos )
invsuma := sum( if(palindromos;#;i>0,inv(palindromos;#;i),0), i, 1, dim(palindromos) )

# mostrar resultados
imprimir format( '%s numeros palindromicos (A002113) entre %s y %s: %s', [dim(palindromos),a,b,palindromos] )
imprimir
imprimir 'CPU: ' + if( timespan<1000, stexto(timespan) + 'ms', stexto(timespan/1000d) + 's' )
imprimir
imprimir format( '%s numeros palindromicos PARES (A029951) entre %s y %s: %s', [dim(palindromosPares),a,b,palindromosPares] )
imprimir
imprimir format( '%s numeros palindromicos IMPARES (A029950) entre %s y %s: %s', [dim(palindromosImpares),a,b,palindromosImpares] )
imprimir
imprimir format( '%s numeros palindromicos PRIMOS (A002385) entre %s y %s: %s', [dim(palindromosPrimos),a,b,palindromosPrimos] )
imprimir
imprimir format( '%s numeros palindromicos CUADRADOS (A002779) entre %s y %s: %s', [dim(palindromosCuadrados),a,b,palindromosCuadrados] )
imprimir
imprimir format( '%s numeros palindromicos CUBOS (A002781) entre %s y %s: %s', [dim(palindromosCubos),a,b,palindromosCubos] )
imprimir
imprimir format( 'Suma de inversos (A118031): %s', [invsuma] )
